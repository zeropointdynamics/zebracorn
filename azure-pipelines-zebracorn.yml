trigger:
- master

jobs:
- job: Linux32
  pool:
    vmImage: 'ubuntu-18.04'
  steps:
  - script: |
           docker pull i386/ubuntu:bionic
           docker run -v $(pwd):/zebracorn i386/ubuntu:bionic /bin/bash -c "cd zebracorn && \
           apt-get -y update && \
           apt-get -y install curl python3.6-dev python3.6 python3-distutils pkg-config build-essential && \
           curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py && \
           python3.6 get-pip.py && \
           pip3 --version && \
           pip3 install setuptools wheel pytest --user && \
           cd bindings/python && python3 setup.py bdist_wheel"
    displayName: 'Build / Artifact Creation'
  - task: CopyFiles@2
    inputs:
      targetFolder: $(Build.ArtifactStagingDirectory)
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'dist'
      publishLocation: 'Container'

- job: Linux64
  pool:
    vmImage: 'ubuntu-18.04'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.6'
    displayName: 'Use Python 3.6'
  - script: |
      python -m pip install --upgrade pip
      python -m pip install wheel
    displayName: 'Install dependencies'
  - script: |
      pip install pytest pytest-azurepipelines
      # cd bindings/python && pytest
    displayName: 'pytest'
  - script: |
      cd bindings/python && python setup.py bdist_wheel
    displayName: 'Build / Artifact creation'
  - task: CopyFiles@2
    inputs:
      targetFolder: $(Build.ArtifactStagingDirectory)
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'dist'
      publishLocation: 'Container'

- job: Windows
  pool:
    vmImage: 'windows-2019'
  strategy:
    matrix:
        32bit:
          PYTHON_VERSION: '3.6'
          PYTHON_ARCH: 'x86'
          PLATFORM: 'Win32'
        64bit:
          PYTHON_VERSION: '3.6'
          PYTHON_ARCH: 'x64'
          PLATFORM: 'x64'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: $(PYTHON_VERSION)
      addToPath: true
      architecture: $(PYTHON_ARCH)
    displayName: 'Use Python $(PYTHON_VERSION) $(PYTHON_ARCH)'
  - script: python -m pip install --upgrade pip setuptools wheel pytest
    displayName: 'Install dependencies'
  - task: VSBuild@1
    inputs:
      solution: 'msvc\*.sln'
      vsVersion: '14.0' 
      platform: $(PLATFORM)
      configuration: Release
    displayName: 'Build / Artifact creation'
  - powershell: |
      dir
    displayName: 'Python / Artifact creation'
  - powershell: |
      # pytest
    displayName: 'pytest'
  - task: CopyFiles@2
    inputs:
      targetFolder: $(Build.ArtifactStagingDirectory)
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'dist'
      publishLocation: 'Container'
